<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <!--
       安全框架： 拦截请求之前可以记录上一次请求，验证成功后会继续上一次请求
   -->
    <!--对/favicon.ico 放行-->
    <security:http pattern="/favicon.ico" security="none"></security:http>
    <!--对登录，错误页面放行-->
    <security:http pattern="/login.jsp" security="none"></security:http>
    <!--对静态资源放行-->
    <security:http pattern="/css/**" security="none"></security:http>
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/plugins/**" security="none"></security:http>
    <!--
       配置拦截的规则
       auto-config="使用自带的页面"
       use-expressions="是否使用spel表达式"，如果使用表达式：hasRole('ROLE_USER')
   -->
    <security:http auto-config="true" use-expressions="true">
        <!-- 配置拦截的请求地址，任何请求地址都必须有ROLE_USER的权限 -->
        <!--
            必须有一个ROLE_USER的角色才可以访问资源
        -->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>
        <!--配置使用自定义的页面-->
        <!--
            login-page: 登录页面
            login-processing-url: 登录的请求路径
            authentication-failure-url: 认证失败后跳转的页面
            default-target-url: 认证成功后默认访问的页面
        -->
        <security:form-login
                login-page="/login.jsp"
                login-processing-url="/login"
                authentication-failure-url="/login.jsp"
                default-target-url="/index.jsp"></security:form-login>

        <!--关闭跨站请求伪造-->
        <security:csrf disabled="true"></security:csrf>
        <!--推出-->
        <security:logout invalidate-session="true" logout-success-url="/login.jsp"
                         logout-url="/logout"></security:logout>
        <!--拒绝访问后跳转的页面-->
        <security:access-denied-handler error-page="/403.jsp"></security:access-denied-handler>
    </security:http>

    <!-- 配置认证(登录)信息 -->
    <security:authentication-manager>
        <!--认证信息的提供者-->
        <!--
            user-service-ref: 管理用户服务对象， 提供用户名和密码
                用户服务对象： 要求： 必须实现接口UserDetailsService
        -->
        <security:authentication-provider user-service-ref="userServiceImpl">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">

    </bean>

    <!--配置开启security的注解支持-->
    <security:global-method-security secured-annotations="enabled"/>


</beans>